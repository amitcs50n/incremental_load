{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory1232143432"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccount1234321.dfs.core.windows.net/"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0918-104158-bpn2f8a0"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-data-ingest.vault.azure.net/"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB"
		},
		"Snowflake1_properties_typeProperties_role": {
			"type": "string",
			"defaultValue": "ACCOUNTADMIN"
		},
		"Snowflake1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "NNAZGVP-RF26798.snowflakecomputing.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RunNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SetInitialWM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rinku@ispjooutlook.onmicrosoft.com/Incremental_load",
							"baseParameters": {
								"storage_account": {
									"value": "@pipeline().parameters.storageAccount",
									"type": "Expression"
								},
								"container_raw": "incrementalload",
								"table_name": {
									"value": "@pipeline().parameters.tableName",
									"type": "Expression"
								},
								"pk_col": {
									"value": "@pipeline().parameters.pkCol",
									"type": "Expression"
								},
								"wm_col": {
									"value": "@pipeline().parameters.wmCol",
									"type": "Expression"
								},
								"last_watermark": {
									"value": "@variables('lastWatermark')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SetInitialWM",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "lastWatermark",
							"value": "1900-01-01 00:00:00"
						}
					},
					{
						"name": "SetNewWM",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "RunNotebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "newWatermark",
							"value": {
								"value": "@activity('RunNotebook').output.runOutput.new_max_watermark\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MergeToTarget",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SetNewWM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Snowflake1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "MERGE INTO CUSTOMER T\nUSING CUSTOMER_STG S\n  ON T.ID = S.ID\nWHEN MATCHED AND S.UPDATED_AT > T.UPDATED_AT THEN UPDATE SET\n  NAME = S.NAME,\n  DATE_OF_BIRTH = S.DATE_OF_BIRTH,\n  UPDATED_AT    = S.UPDATED_AT\nWHEN NOT MATCHED THEN\n  INSERT (ID, NAME, DATE_OF_BIRTH, UPDATED_AT)\n  VALUES (S.ID, S.NAME, S.DATE_OF_BIRTH, S.UPDATED_AT);\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "WriteAudit",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "MergeToTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Snowflake1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "INSERT INTO INGESTION_AUDIT (EXECUTED_AT, PIPELINE_RUNID, TABLE_NAME, WATERMARK, STATUS)\nSELECT\n  CURRENT_TIMESTAMP(),\n  '@{pipeline().RunId}',\n  'CUSTOMER',\n  TRY_TO_TIMESTAMP_NTZ(NULLIF('@{variables('newWatermark')}', '')),\n  CASE WHEN NULLIF('@{variables('newWatermark')}', '') IS NULL THEN 'NO_CHANGE' ELSE 'SUCCESS' END;\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "TruncateStg",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "WriteAudit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Snowflake1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE DB.PUBLIC.CUSTOMER_STG;\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"storageAccount": {
						"type": "string",
						"defaultValue": "datalake244334"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "customer"
					},
					"pkCol": {
						"type": "string",
						"defaultValue": "id"
					},
					"wmCol": {
						"type": "string",
						"defaultValue": "updated_at"
					}
				},
				"variables": {
					"lastWatermark": {
						"type": "String"
					},
					"newWatermark": {
						"type": "String"
					},
					"lastWatermark12": {
						"type": "String"
					},
					"newWatermark12": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/initialload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer",
						"fileSystem": "incrementalload"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "date_of_birth",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-667202965675607.7.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]",
					"credential": {
						"referenceName": "credential1",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/credential1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "NNAZGVP-RF26798",
					"user": "AMITYADAVSEPT1234",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"role": "[parameters('Snowflake1_properties_typeProperties_role')]",
					"host": "[parameters('Snowflake1_properties_typeProperties_host')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				},
				"version": "1.1"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/4de5e007-e4c4-4e2b-bb58-efa8aa3a8785/resourcegroups/new_resource1233454/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AmitIdentity"
				}
			},
			"dependsOn": []
		}
	]
}