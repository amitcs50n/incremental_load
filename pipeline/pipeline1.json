{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "RunNotebook",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "SetInitialWM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/rinku@ispjooutlook.onmicrosoft.com/Incremental_load",
					"baseParameters": {
						"storage_account": {
							"value": "@pipeline().parameters.storageAccount",
							"type": "Expression"
						},
						"container_raw": "incrementalload",
						"table_name": {
							"value": "@pipeline().parameters.tableName",
							"type": "Expression"
						},
						"pk_col": {
							"value": "@pipeline().parameters.pkCol",
							"type": "Expression"
						},
						"wm_col": {
							"value": "@pipeline().parameters.wmCol",
							"type": "Expression"
						},
						"last_watermark": {
							"value": "@variables('lastWatermark')",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SetInitialWM",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "lastWatermark",
					"value": "1900-01-01 00:00:00"
				}
			},
			{
				"name": "SetNewWM",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "RunNotebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "newWatermark",
					"value": {
						"value": "@activity('RunNotebook').output.runOutput.new_max_watermark\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "MergeToTarget",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SetNewWM",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "MERGE INTO CUSTOMER T\nUSING CUSTOMER_STG S\n  ON T.ID = S.ID\nWHEN MATCHED AND S.UPDATED_AT > T.UPDATED_AT THEN UPDATE SET\n  NAME = S.NAME,\n  DATE_OF_BIRTH = S.DATE_OF_BIRTH,\n  UPDATED_AT    = S.UPDATED_AT\nWHEN NOT MATCHED THEN\n  INSERT (ID, NAME, DATE_OF_BIRTH, UPDATED_AT)\n  VALUES (S.ID, S.NAME, S.DATE_OF_BIRTH, S.UPDATED_AT);\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "WriteAudit",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "MergeToTarget",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "INSERT INTO INGESTION_AUDIT (EXECUTED_AT, PIPELINE_RUNID, TABLE_NAME, WATERMARK, STATUS)\nSELECT\n  CURRENT_TIMESTAMP(),\n  '@{pipeline().RunId}',\n  'CUSTOMER',\n  TRY_TO_TIMESTAMP_NTZ(NULLIF('@{variables('newWatermark')}', '')),\n  CASE WHEN NULLIF('@{variables('newWatermark')}', '') IS NULL THEN 'NO_CHANGE' ELSE 'SUCCESS' END;\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "TruncateStg",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "WriteAudit",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE DB.PUBLIC.CUSTOMER_STG;\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"storageAccount": {
				"type": "string",
				"defaultValue": "storageaccount1234321"
			},
			"tableName": {
				"type": "string",
				"defaultValue": "customer"
			},
			"pkCol": {
				"type": "string",
				"defaultValue": "id"
			},
			"wmCol": {
				"type": "string",
				"defaultValue": "updated_at"
			}
		},
		"variables": {
			"lastWatermark": {
				"type": "String"
			},
			"newWatermark": {
				"type": "String"
			},
			"lastWatermark12": {
				"type": "String"
			},
			"newWatermark12": {
				"type": "String"
			}
		},
		"annotations": []
	}
}